services:
  waf:
    image: owasp/modsecurity-crs:nginx
    # build:                              #IF USING DOCKERFILE - OTHERVISE USE IMAGE
      # context: ./backend/security/waf  
      # dockerfile: dockerfile
    ports:
        - "8080:443"  # Exposes Nginx HTTPS port
        - "8000:80"  #Optionally expose HTTP for redirection
    volumes:
      - ./backend/security/waf/nginx.conf:/etc/nginx/templates/conf.d/default.conf.template:ro
      - ./backend/security/waf/modsecurity/config.conf:/etc/nginx/templates/modsecurity.d/modsecurity.conf.template:ro
      - ./backend/security/waf/logs:/var/log/modsecurity
    container_name: ft_transcendence_waf
    depends_on:
      - frontend
    restart: unless-stopped
    

  frontend:
    build:
      context: . # Build context is the root directory for the frontend Dockerfile
      dockerfile: dockerfile # Specifies the frontend Dockerfile (lowercase)
    # ports:
    #   - "8080:443" #REMOVE IF USING WAF
    #   - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certificates:/etc/nginx/certs:ro # Mount SSL certificates
    container_name: ft_transcendence_nginx
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./backend # Build context is the backend directory
      dockerfile: Dockerfile # Specifies the backend Dockerfile
    # ports: # Not strictly needed to expose if only Nginx talks to it
      # - "3000:3000" 
    volumes:
      - ./backend/database:/app/database # Persist SQLite database
    container_name: ft_transcendence_backend
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your_super_secret_jwt_key_change_in_production_123456}
      - PORT=3000
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-https://localhost:8080/auth/google/callback}
    restart: unless-stopped

volumes:
  database_data: # We can define a named volume if prefered, instead of bind mount